/*
 * ðŸ˜¸ Cheshire-Cat API
 * Production ready AI assistant framework
 *
 * The version of the OpenAPI document: 1.9.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package it.baccan.cheshirecat.model;

import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.jackson.nullable.JsonNullable;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import it.baccan.cheshirecat.JSON;


/**
 * Represents an interaction with a large language model (LLM).  Inherits from ModelInteraction and adds specific attributes related to LLM interactions.  Attributes ---------- model_type : Literal[\&quot;llm\&quot;]     The type of model, which is fixed to \&quot;llm\&quot;. reply : str     The response generated by the LLM. output_tokens : int     The number of output tokens generated by the LLM. ended_at : float     The timestamp when the interaction ended.
 */
@JsonPropertyOrder({
  LLMModelInteraction.JSON_PROPERTY_MODEL_TYPE,
  LLMModelInteraction.JSON_PROPERTY_SOURCE,
  LLMModelInteraction.JSON_PROPERTY_PROMPT,
  LLMModelInteraction.JSON_PROPERTY_INPUT_TOKENS,
  LLMModelInteraction.JSON_PROPERTY_STARTED_AT,
  LLMModelInteraction.JSON_PROPERTY_REPLY,
  LLMModelInteraction.JSON_PROPERTY_OUTPUT_TOKENS,
  LLMModelInteraction.JSON_PROPERTY_ENDED_AT
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.13.0")
public class LLMModelInteraction {
  public static final String JSON_PROPERTY_MODEL_TYPE = "model_type";
  private JsonNullable<Object> modelType = JsonNullable.<Object>of(null);

  public static final String JSON_PROPERTY_SOURCE = "source";
  @javax.annotation.Nonnull
  private String source;

  public static final String JSON_PROPERTY_PROMPT = "prompt";
  @javax.annotation.Nonnull
  private List<String> prompt = new ArrayList<>();

  public static final String JSON_PROPERTY_INPUT_TOKENS = "input_tokens";
  @javax.annotation.Nonnull
  private Integer inputTokens;

  public static final String JSON_PROPERTY_STARTED_AT = "started_at";
  @javax.annotation.Nullable
  private BigDecimal startedAt;

  public static final String JSON_PROPERTY_REPLY = "reply";
  @javax.annotation.Nonnull
  private String reply;

  public static final String JSON_PROPERTY_OUTPUT_TOKENS = "output_tokens";
  @javax.annotation.Nonnull
  private Integer outputTokens;

  public static final String JSON_PROPERTY_ENDED_AT = "ended_at";
  @javax.annotation.Nonnull
  private BigDecimal endedAt;

  public LLMModelInteraction() { 
  }

  public LLMModelInteraction modelType(@javax.annotation.Nullable Object modelType) {
    this.modelType = JsonNullable.<Object>of(modelType);
    return this;
  }

  /**
   * Get modelType
   * @return modelType
   */
  @javax.annotation.Nullable
  @JsonIgnore

  public Object getModelType() {
        return modelType.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_MODEL_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Object> getModelType_JsonNullable() {
    return modelType;
  }
  
  @JsonProperty(JSON_PROPERTY_MODEL_TYPE)
  public void setModelType_JsonNullable(JsonNullable<Object> modelType) {
    this.modelType = modelType;
  }

  public void setModelType(@javax.annotation.Nullable Object modelType) {
    this.modelType = JsonNullable.<Object>of(modelType);
  }


  public LLMModelInteraction source(@javax.annotation.Nonnull String source) {
    this.source = source;
    return this;
  }

  /**
   * Get source
   * @return source
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_SOURCE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getSource() {
    return source;
  }


  @JsonProperty(JSON_PROPERTY_SOURCE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setSource(@javax.annotation.Nonnull String source) {
    this.source = source;
  }


  public LLMModelInteraction prompt(@javax.annotation.Nonnull List<String> prompt) {
    this.prompt = prompt;
    return this;
  }

  public LLMModelInteraction addPromptItem(String promptItem) {
    if (this.prompt == null) {
      this.prompt = new ArrayList<>();
    }
    this.prompt.add(promptItem);
    return this;
  }

  /**
   * Get prompt
   * @return prompt
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_PROMPT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public List<String> getPrompt() {
    return prompt;
  }


  @JsonProperty(JSON_PROPERTY_PROMPT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setPrompt(@javax.annotation.Nonnull List<String> prompt) {
    this.prompt = prompt;
  }


  public LLMModelInteraction inputTokens(@javax.annotation.Nonnull Integer inputTokens) {
    this.inputTokens = inputTokens;
    return this;
  }

  /**
   * Get inputTokens
   * @return inputTokens
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_INPUT_TOKENS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Integer getInputTokens() {
    return inputTokens;
  }


  @JsonProperty(JSON_PROPERTY_INPUT_TOKENS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setInputTokens(@javax.annotation.Nonnull Integer inputTokens) {
    this.inputTokens = inputTokens;
  }


  public LLMModelInteraction startedAt(@javax.annotation.Nullable BigDecimal startedAt) {
    this.startedAt = startedAt;
    return this;
  }

  /**
   * Get startedAt
   * @return startedAt
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_STARTED_AT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getStartedAt() {
    return startedAt;
  }


  @JsonProperty(JSON_PROPERTY_STARTED_AT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setStartedAt(@javax.annotation.Nullable BigDecimal startedAt) {
    this.startedAt = startedAt;
  }


  public LLMModelInteraction reply(@javax.annotation.Nonnull String reply) {
    this.reply = reply;
    return this;
  }

  /**
   * Get reply
   * @return reply
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_REPLY)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getReply() {
    return reply;
  }


  @JsonProperty(JSON_PROPERTY_REPLY)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setReply(@javax.annotation.Nonnull String reply) {
    this.reply = reply;
  }


  public LLMModelInteraction outputTokens(@javax.annotation.Nonnull Integer outputTokens) {
    this.outputTokens = outputTokens;
    return this;
  }

  /**
   * Get outputTokens
   * @return outputTokens
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_OUTPUT_TOKENS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Integer getOutputTokens() {
    return outputTokens;
  }


  @JsonProperty(JSON_PROPERTY_OUTPUT_TOKENS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setOutputTokens(@javax.annotation.Nonnull Integer outputTokens) {
    this.outputTokens = outputTokens;
  }


  public LLMModelInteraction endedAt(@javax.annotation.Nonnull BigDecimal endedAt) {
    this.endedAt = endedAt;
    return this;
  }

  /**
   * Get endedAt
   * @return endedAt
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_ENDED_AT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public BigDecimal getEndedAt() {
    return endedAt;
  }


  @JsonProperty(JSON_PROPERTY_ENDED_AT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setEndedAt(@javax.annotation.Nonnull BigDecimal endedAt) {
    this.endedAt = endedAt;
  }


  /**
   * Return true if this LLMModelInteraction object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    LLMModelInteraction llMModelInteraction = (LLMModelInteraction) o;
    return equalsNullable(this.modelType, llMModelInteraction.modelType) &&
        Objects.equals(this.source, llMModelInteraction.source) &&
        Objects.equals(this.prompt, llMModelInteraction.prompt) &&
        Objects.equals(this.inputTokens, llMModelInteraction.inputTokens) &&
        Objects.equals(this.startedAt, llMModelInteraction.startedAt) &&
        Objects.equals(this.reply, llMModelInteraction.reply) &&
        Objects.equals(this.outputTokens, llMModelInteraction.outputTokens) &&
        Objects.equals(this.endedAt, llMModelInteraction.endedAt);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(hashCodeNullable(modelType), source, prompt, inputTokens, startedAt, reply, outputTokens, endedAt);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class LLMModelInteraction {\n");
    sb.append("    modelType: ").append(toIndentedString(modelType)).append("\n");
    sb.append("    source: ").append(toIndentedString(source)).append("\n");
    sb.append("    prompt: ").append(toIndentedString(prompt)).append("\n");
    sb.append("    inputTokens: ").append(toIndentedString(inputTokens)).append("\n");
    sb.append("    startedAt: ").append(toIndentedString(startedAt)).append("\n");
    sb.append("    reply: ").append(toIndentedString(reply)).append("\n");
    sb.append("    outputTokens: ").append(toIndentedString(outputTokens)).append("\n");
    sb.append("    endedAt: ").append(toIndentedString(endedAt)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}


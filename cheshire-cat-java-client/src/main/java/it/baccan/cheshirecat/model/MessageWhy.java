/*
 * ðŸ˜¸ Cheshire-Cat API
 * Production ready AI assistant framework
 *
 * The version of the OpenAPI document: 1.7.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package it.baccan.cheshirecat.model;

import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import it.baccan.cheshirecat.model.ModelInteractionsInner;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import it.baccan.cheshirecat.JSON;


/**
 * Class for wrapping message why  Variables:     input (str): input message     intermediate_steps (List): intermediate steps     memory (dict): memory     model_interactions (List[LLMModelInteraction | EmbedderModelInteraction]): model interactions
 */
@JsonPropertyOrder({
  MessageWhy.JSON_PROPERTY_INPUT,
  MessageWhy.JSON_PROPERTY_INTERMEDIATE_STEPS,
  MessageWhy.JSON_PROPERTY_MEMORY,
  MessageWhy.JSON_PROPERTY_MODEL_INTERACTIONS
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.10.0")
public class MessageWhy {
  public static final String JSON_PROPERTY_INPUT = "input";
  @javax.annotation.Nonnull
  private String input;

  public static final String JSON_PROPERTY_INTERMEDIATE_STEPS = "intermediate_steps";
  @javax.annotation.Nonnull
  private List<Object> intermediateSteps = new ArrayList<>();

  public static final String JSON_PROPERTY_MEMORY = "memory";
  @javax.annotation.Nonnull
  private Object memory;

  public static final String JSON_PROPERTY_MODEL_INTERACTIONS = "model_interactions";
  @javax.annotation.Nonnull
  private List<ModelInteractionsInner> modelInteractions = new ArrayList<>();

  public MessageWhy() { 
  }

  public MessageWhy input(@javax.annotation.Nonnull String input) {
    this.input = input;
    return this;
  }

  /**
   * Get input
   * @return input
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_INPUT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getInput() {
    return input;
  }


  @JsonProperty(JSON_PROPERTY_INPUT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setInput(@javax.annotation.Nonnull String input) {
    this.input = input;
  }


  public MessageWhy intermediateSteps(@javax.annotation.Nonnull List<Object> intermediateSteps) {
    this.intermediateSteps = intermediateSteps;
    return this;
  }

  public MessageWhy addIntermediateStepsItem(Object intermediateStepsItem) {
    if (this.intermediateSteps == null) {
      this.intermediateSteps = new ArrayList<>();
    }
    this.intermediateSteps.add(intermediateStepsItem);
    return this;
  }

  /**
   * Get intermediateSteps
   * @return intermediateSteps
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_INTERMEDIATE_STEPS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public List<Object> getIntermediateSteps() {
    return intermediateSteps;
  }


  @JsonProperty(JSON_PROPERTY_INTERMEDIATE_STEPS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setIntermediateSteps(@javax.annotation.Nonnull List<Object> intermediateSteps) {
    this.intermediateSteps = intermediateSteps;
  }


  public MessageWhy memory(@javax.annotation.Nonnull Object memory) {
    this.memory = memory;
    return this;
  }

  /**
   * Get memory
   * @return memory
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_MEMORY)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Object getMemory() {
    return memory;
  }


  @JsonProperty(JSON_PROPERTY_MEMORY)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setMemory(@javax.annotation.Nonnull Object memory) {
    this.memory = memory;
  }


  public MessageWhy modelInteractions(@javax.annotation.Nonnull List<ModelInteractionsInner> modelInteractions) {
    this.modelInteractions = modelInteractions;
    return this;
  }

  public MessageWhy addModelInteractionsItem(ModelInteractionsInner modelInteractionsItem) {
    if (this.modelInteractions == null) {
      this.modelInteractions = new ArrayList<>();
    }
    this.modelInteractions.add(modelInteractionsItem);
    return this;
  }

  /**
   * Get modelInteractions
   * @return modelInteractions
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_MODEL_INTERACTIONS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public List<ModelInteractionsInner> getModelInteractions() {
    return modelInteractions;
  }


  @JsonProperty(JSON_PROPERTY_MODEL_INTERACTIONS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setModelInteractions(@javax.annotation.Nonnull List<ModelInteractionsInner> modelInteractions) {
    this.modelInteractions = modelInteractions;
  }

  /**
   * A container for additional, undeclared properties.
   * This is a holder for any undeclared properties as specified with
   * the 'additionalProperties' keyword in the OAS document.
   */
  private Map<String, Object> additionalProperties;

  /**
   * Set the additional (undeclared) property with the specified name and value.
   * If the property does not already exist, create it otherwise replace it.
   */
  @JsonAnySetter
  public MessageWhy putAdditionalProperty(String key, Object value) {
    if (this.additionalProperties == null) {
        this.additionalProperties = new HashMap<>();
    }
    this.additionalProperties.put(key, value);
    return this;
  }

  /**
   * Return the additional (undeclared) property.
   */
  @JsonAnyGetter
  public Map<String, Object> getAdditionalProperties() {
    return additionalProperties;
  }

  /**
   * Return the additional (undeclared) property with the specified name.
   */
  public Object getAdditionalProperty(String key) {
    if (this.additionalProperties == null) {
        return null;
    }
    return this.additionalProperties.get(key);
  }

  /**
   * Return true if this MessageWhy object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    MessageWhy messageWhy = (MessageWhy) o;
    return Objects.equals(this.input, messageWhy.input) &&
        Objects.equals(this.intermediateSteps, messageWhy.intermediateSteps) &&
        Objects.equals(this.memory, messageWhy.memory) &&
        Objects.equals(this.modelInteractions, messageWhy.modelInteractions)&&
        Objects.equals(this.additionalProperties, messageWhy.additionalProperties);
  }

  @Override
  public int hashCode() {
    return Objects.hash(input, intermediateSteps, memory, modelInteractions, additionalProperties);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class MessageWhy {\n");
    sb.append("    input: ").append(toIndentedString(input)).append("\n");
    sb.append("    intermediateSteps: ").append(toIndentedString(intermediateSteps)).append("\n");
    sb.append("    memory: ").append(toIndentedString(memory)).append("\n");
    sb.append("    modelInteractions: ").append(toIndentedString(modelInteractions)).append("\n");
    sb.append("    additionalProperties: ").append(toIndentedString(additionalProperties)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}


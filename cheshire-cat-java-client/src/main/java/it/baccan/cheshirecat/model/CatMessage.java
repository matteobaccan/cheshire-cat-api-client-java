/*
 * ðŸ˜¸ Cheshire-Cat API
 * Production ready AI assistant framework
 *
 * The version of the OpenAPI document: 1.9.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package it.baccan.cheshirecat.model;

import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import it.baccan.cheshirecat.model.Audio;
import it.baccan.cheshirecat.model.CatMessageWhy;
import it.baccan.cheshirecat.model.Image;
import it.baccan.cheshirecat.model.Text;
import java.math.BigDecimal;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import it.baccan.cheshirecat.JSON;


/**
 * Represents a Cat message.  Attributes ---------- type : str     The type of message. Defaults to \&quot;chat\&quot;. user_id : str     Unique identifier for the user associated with the message. when : float     The timestamp when the message was sent. Defaults to the current time. who : str     The name of the message author. text : Optional[str], default&#x3D;None     The text content of the message. image : Optional[str], default&#x3D;None     Image file URLs or base64 data URIs that represent image associated with the message. audio : Optional[str], default&#x3D;None     Audio file URLs or base64 data URIs that represent audio associated with the message. why : Optional[MessageWhy]     Additional contextual information related to the message.  Notes ----- - The &#x60;content&#x60; parameter and attribute are deprecated. Use &#x60;text&#x60; instead.
 */
@JsonPropertyOrder({
  CatMessage.JSON_PROPERTY_USER_ID,
  CatMessage.JSON_PROPERTY_WHEN,
  CatMessage.JSON_PROPERTY_WHO,
  CatMessage.JSON_PROPERTY_TEXT,
  CatMessage.JSON_PROPERTY_IMAGE,
  CatMessage.JSON_PROPERTY_AUDIO,
  CatMessage.JSON_PROPERTY_TYPE,
  CatMessage.JSON_PROPERTY_WHY,
  CatMessage.JSON_PROPERTY_CONTENT
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.13.0")
public class CatMessage {
  public static final String JSON_PROPERTY_USER_ID = "user_id";
  @javax.annotation.Nonnull
  private String userId;

  public static final String JSON_PROPERTY_WHEN = "when";
  @javax.annotation.Nullable
  private BigDecimal when;

  public static final String JSON_PROPERTY_WHO = "who";
  @javax.annotation.Nullable
  private String who = "AI";

  public static final String JSON_PROPERTY_TEXT = "text";
  @javax.annotation.Nullable
  private Text text;

  public static final String JSON_PROPERTY_IMAGE = "image";
  @javax.annotation.Nullable
  private Image image;

  public static final String JSON_PROPERTY_AUDIO = "audio";
  @javax.annotation.Nullable
  private Audio audio;

  public static final String JSON_PROPERTY_TYPE = "type";
  @javax.annotation.Nullable
  private String type = "chat";

  public static final String JSON_PROPERTY_WHY = "why";
  @javax.annotation.Nullable
  private CatMessageWhy why;

  public static final String JSON_PROPERTY_CONTENT = "content";
  @javax.annotation.Nonnull
  private String content;

  public CatMessage() { 
  }

  @JsonCreator
  public CatMessage(
    @JsonProperty(JSON_PROPERTY_CONTENT) String content
  ) {
    this();
    this.content = content;
  }

  public CatMessage userId(@javax.annotation.Nonnull String userId) {
    this.userId = userId;
    return this;
  }

  /**
   * Get userId
   * @return userId
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_USER_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getUserId() {
    return userId;
  }


  @JsonProperty(JSON_PROPERTY_USER_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setUserId(@javax.annotation.Nonnull String userId) {
    this.userId = userId;
  }


  public CatMessage when(@javax.annotation.Nullable BigDecimal when) {
    this.when = when;
    return this;
  }

  /**
   * Get when
   * @return when
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_WHEN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getWhen() {
    return when;
  }


  @JsonProperty(JSON_PROPERTY_WHEN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setWhen(@javax.annotation.Nullable BigDecimal when) {
    this.when = when;
  }


  public CatMessage who(@javax.annotation.Nullable String who) {
    this.who = who;
    return this;
  }

  /**
   * Get who
   * @return who
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_WHO)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getWho() {
    return who;
  }


  @JsonProperty(JSON_PROPERTY_WHO)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setWho(@javax.annotation.Nullable String who) {
    this.who = who;
  }


  public CatMessage text(@javax.annotation.Nullable Text text) {
    this.text = text;
    return this;
  }

  /**
   * Get text
   * @return text
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TEXT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Text getText() {
    return text;
  }


  @JsonProperty(JSON_PROPERTY_TEXT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setText(@javax.annotation.Nullable Text text) {
    this.text = text;
  }


  public CatMessage image(@javax.annotation.Nullable Image image) {
    this.image = image;
    return this;
  }

  /**
   * Get image
   * @return image
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_IMAGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Image getImage() {
    return image;
  }


  @JsonProperty(JSON_PROPERTY_IMAGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setImage(@javax.annotation.Nullable Image image) {
    this.image = image;
  }


  public CatMessage audio(@javax.annotation.Nullable Audio audio) {
    this.audio = audio;
    return this;
  }

  /**
   * Get audio
   * @return audio
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_AUDIO)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Audio getAudio() {
    return audio;
  }


  @JsonProperty(JSON_PROPERTY_AUDIO)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAudio(@javax.annotation.Nullable Audio audio) {
    this.audio = audio;
  }


  public CatMessage type(@javax.annotation.Nullable String type) {
    this.type = type;
    return this;
  }

  /**
   * Get type
   * @return type
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getType() {
    return type;
  }


  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setType(@javax.annotation.Nullable String type) {
    this.type = type;
  }


  public CatMessage why(@javax.annotation.Nullable CatMessageWhy why) {
    this.why = why;
    return this;
  }

  /**
   * Get why
   * @return why
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_WHY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public CatMessageWhy getWhy() {
    return why;
  }


  @JsonProperty(JSON_PROPERTY_WHY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setWhy(@javax.annotation.Nullable CatMessageWhy why) {
    this.why = why;
  }


  /**
   * This attribute is deprecated. Use &#x60;text&#x60; instead.  The text content of the message. Use &#x60;text&#x60; instead.  Returns ------- str     The text content of the message.
   * @return content
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_CONTENT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getContent() {
    return content;
  }



  /**
   * A container for additional, undeclared properties.
   * This is a holder for any undeclared properties as specified with
   * the 'additionalProperties' keyword in the OAS document.
   */
  private Map<String, Object> additionalProperties;

  /**
   * Set the additional (undeclared) property with the specified name and value.
   * If the property does not already exist, create it otherwise replace it.
   */
  @JsonAnySetter
  public CatMessage putAdditionalProperty(String key, Object value) {
    if (this.additionalProperties == null) {
        this.additionalProperties = new HashMap<>();
    }
    this.additionalProperties.put(key, value);
    return this;
  }

  /**
   * Return the additional (undeclared) property.
   */
  @JsonAnyGetter
  public Map<String, Object> getAdditionalProperties() {
    return additionalProperties;
  }

  /**
   * Return the additional (undeclared) property with the specified name.
   */
  public Object getAdditionalProperty(String key) {
    if (this.additionalProperties == null) {
        return null;
    }
    return this.additionalProperties.get(key);
  }

  /**
   * Return true if this CatMessage object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CatMessage catMessage = (CatMessage) o;
    return Objects.equals(this.userId, catMessage.userId) &&
        Objects.equals(this.when, catMessage.when) &&
        Objects.equals(this.who, catMessage.who) &&
        Objects.equals(this.text, catMessage.text) &&
        Objects.equals(this.image, catMessage.image) &&
        Objects.equals(this.audio, catMessage.audio) &&
        Objects.equals(this.type, catMessage.type) &&
        Objects.equals(this.why, catMessage.why) &&
        Objects.equals(this.content, catMessage.content)&&
        Objects.equals(this.additionalProperties, catMessage.additionalProperties);
  }

  @Override
  public int hashCode() {
    return Objects.hash(userId, when, who, text, image, audio, type, why, content, additionalProperties);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CatMessage {\n");
    sb.append("    userId: ").append(toIndentedString(userId)).append("\n");
    sb.append("    when: ").append(toIndentedString(when)).append("\n");
    sb.append("    who: ").append(toIndentedString(who)).append("\n");
    sb.append("    text: ").append(toIndentedString(text)).append("\n");
    sb.append("    image: ").append(toIndentedString(image)).append("\n");
    sb.append("    audio: ").append(toIndentedString(audio)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    why: ").append(toIndentedString(why)).append("\n");
    sb.append("    content: ").append(toIndentedString(content)).append("\n");
    sb.append("    additionalProperties: ").append(toIndentedString(additionalProperties)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}


/*
 * ðŸ˜¸ Cheshire-Cat API
 * Production ready AI assistant framework
 *
 * The version of the OpenAPI document: 1.9.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package it.baccan.cheshirecat.service;

import it.baccan.cheshirecat.*;
import it.baccan.cheshirecat.auth.*;
import it.baccan.cheshirecat.model.BodyRecallMemoryPoints;
import it.baccan.cheshirecat.model.HTTPValidationError;
import it.baccan.cheshirecat.model.MemoryPoint;
import it.baccan.cheshirecat.model.MemoryPointBase;

import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for VectorMemoryPointsApi
 */
public class VectorMemoryPointsApiTest {

    private final VectorMemoryPointsApi api = new VectorMemoryPointsApi();

    /**
     * Create Memory Point
     *
     * Create a point in memory
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createMemoryPointTest() throws ApiException {
        //String collectionId = null;
        //MemoryPointBase memoryPointBase = null;
        //MemoryPoint response = api.createMemoryPoint(collectionId, memoryPointBase);
        // TODO: test validations
    }

    /**
     * Delete Memory Point
     *
     * Delete a specific point in memory
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteMemoryPointTest() throws ApiException {
        //String collectionId = null;
        //String pointId = null;
        //Object response = api.deleteMemoryPoint(collectionId, pointId);
        // TODO: test validations
    }

    /**
     * Delete Memory Points By Metadata
     *
     * Delete points in memory by filter
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteMemoryPointsByMetadataTest() throws ApiException {
        //String collectionId = null;
        //String body = null;
        //Object response = api.deleteMemoryPointsByMetadata(collectionId, body);
        // TODO: test validations
    }

    /**
     * Edit Memory Point
     *
     * Edit a point in memory   Example ---------- &#x60;&#x60;&#x60;  collection &#x3D; \&quot;declarative\&quot; content &#x3D; \&quot;MIAO!\&quot; metadata &#x3D; {\&quot;custom_key\&quot;: \&quot;custom_value\&quot;} req_json &#x3D; {     \&quot;content\&quot;: content,     \&quot;metadata\&quot;: metadata, } # create a point res &#x3D; requests.post(     f\&quot;http://localhost:1865/memory/collections/{collection}/points\&quot;, json&#x3D;req_json ) json &#x3D; res.json() #get the id point_id &#x3D; json[\&quot;id\&quot;] # new point values content &#x3D; \&quot;NEW MIAO!\&quot; metadata &#x3D; {\&quot;custom_key\&quot;: \&quot;new_custom_value\&quot;} req_json &#x3D; {     \&quot;content\&quot;: content,     \&quot;metadata\&quot;: metadata, }  # edit the point res &#x3D; requests.put(     f\&quot;http://localhost:1865/memory/collections/{collection}/points/{point_id}\&quot;, json&#x3D;req_json ) json &#x3D; res.json() print(json) &#x60;&#x60;&#x60;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void editMemoryPointTest() throws ApiException {
        //String collectionId = null;
        //String pointId = null;
        //MemoryPointBase memoryPointBase = null;
        //MemoryPoint response = api.editMemoryPoint(collectionId, pointId, memoryPointBase);
        // TODO: test validations
    }

    /**
     * Get Points In Collection
     *
     * Retrieve all the points from a single collection   Example ---------- &#x60;&#x60;&#x60; collection &#x3D; \&quot;declarative\&quot; res &#x3D; requests.get(     f\&quot;http://localhost:1865/memory/collections/{collection}/points\&quot;, ) json &#x3D; res.json() points &#x3D; json[\&quot;points\&quot;]  for point in points:     payload &#x3D; point[\&quot;payload\&quot;]     vector &#x3D; point[\&quot;vector\&quot;]     print(payload)     print(vector) &#x60;&#x60;&#x60;  Example using offset ---------- &#x60;&#x60;&#x60; # get all the points with limit 10 limit &#x3D; 10 next_offset &#x3D; \&quot;\&quot; collection &#x3D; \&quot;declarative\&quot;  while True:     res &#x3D; requests.get(         f\&quot;http://localhost:1865/memory/collections/{collection}/points?limit&#x3D;{limit}&amp;offset&#x3D;{next_offset}\&quot;,     )     json &#x3D; res.json()     points &#x3D; json[\&quot;points\&quot;]     next_offset &#x3D; json[\&quot;next_offset\&quot;]      for point in points:         payload &#x3D; point[\&quot;payload\&quot;]         vector &#x3D; point[\&quot;vector\&quot;]         print(payload)         print(vector)          if next_offset is None:         break &#x60;&#x60;&#x60;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getPointsInCollectionTest() throws ApiException {
        //String collectionId = null;
        //Integer limit = null;
        //String offset = null;
        //Object response = api.getPointsInCollection(collectionId, limit, offset);
        // TODO: test validations
    }

    /**
     * Recall Memory Points
     *
     * Search k memories similar to given text with specified metadata criteria.      Example ---------- &#x60;&#x60;&#x60; collection &#x3D; \&quot;episodic\&quot; content &#x3D; \&quot;MIAO!\&quot; metadata &#x3D; {\&quot;custom_key\&quot;: \&quot;custom_value\&quot;} req_json &#x3D; {     \&quot;content\&quot;: content,     \&quot;metadata\&quot;: metadata, } # create a point res &#x3D; requests.post(     f\&quot;http://localhost:1865/memory/collections/{collection}/points\&quot;, json&#x3D;req_json )  # recall with metadata req_json &#x3D; {     \&quot;text\&quot;: \&quot;CAT\&quot;,      \&quot;metadata\&quot;:{\&quot;custom_key\&quot;:\&quot;custom_value\&quot;} } res &#x3D; requests.post(     f\&quot;http://localhost:1865/memory/recall\&quot;, json&#x3D;req_json ) json &#x3D; res.json() print(json) &#x60;&#x60;&#x60;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void recallMemoryPointsTest() throws ApiException {
        //BodyRecallMemoryPoints bodyRecallMemoryPoints = null;
        //Object response = api.recallMemoryPoints(bodyRecallMemoryPoints);
        // TODO: test validations
    }

    /**
     * Recall Memory Points From Text
     *
     * Search k memories similar to given text.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void recallMemoryPointsFromTextTest() throws ApiException {
        //String text = null;
        //Integer k = null;
        //Object response = api.recallMemoryPointsFromText(text, k);
        // TODO: test validations
    }

}
